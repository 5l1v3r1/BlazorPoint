#pragma checksum "C:\Users\smj\source\repos\lms\Pages\Form1.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "65d39df4c72d15746e9cfa6c2860c1725607a617"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace lms.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 2 "C:\Users\smj\source\repos\lms\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "C:\Users\smj\source\repos\lms\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 4 "C:\Users\smj\source\repos\lms\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 5 "C:\Users\smj\source\repos\lms\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "C:\Users\smj\source\repos\lms\_Imports.razor"
using lms;

#line default
#line hidden
#line 7 "C:\Users\smj\source\repos\lms\_Imports.razor"
using lms.Shared;

#line default
#line hidden
#line 8 "C:\Users\smj\source\repos\lms\_Imports.razor"
using lms.Constants;

#line default
#line hidden
#line 2 "C:\Users\smj\source\repos\lms\Pages\Form1.razor"
using vcs.Validations;

#line default
#line hidden
#line 3 "C:\Users\smj\source\repos\lms\Pages\Form1.razor"
using vcs.Workers;

#line default
#line hidden
#line 4 "C:\Users\smj\source\repos\lms\Pages\Form1.razor"
using vcs.Models;

#line default
#line hidden
#line 5 "C:\Users\smj\source\repos\lms\Pages\Form1.razor"
using Newtonsoft.Json;

#line default
#line hidden
#line 6 "C:\Users\smj\source\repos\lms\Pages\Form1.razor"
using System.Net.Http;

#line default
#line hidden
#line 7 "C:\Users\smj\source\repos\lms\Pages\Form1.razor"
using System.Net;

#line default
#line hidden
#line 8 "C:\Users\smj\source\repos\lms\Pages\Form1.razor"
using System.Net.Http.Headers;

#line default
#line hidden
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/default.aspx/forms/form1")]
    public class Form1 : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 147 "C:\Users\smj\source\repos\lms\Pages\Form1.razor"
       
    private Form1Validation form1Vald = new Form1Validation();
    private string result;
    private Root root { get; set; }
    private PeoplePicker peoplePicker = new PeoplePicker();
    private LookupList office = new LookupList();
    private async Task HandleValidationAsync()
    {
        await SubmitAsync();
    }

    private async Task HandleInValidationAsync()
    {
        Console.WriteLine("Invalid");
        await Task.FromResult(0);
    }

    private async Task SubmitAsync()
    {
        HttpClient Http = new HttpClient();
        Http.DefaultRequestHeaders.Add("Accept", "application/json");
        Http.DefaultRequestHeaders.Add("X-RequestDigest", await VCSTools.GetDigestAsync(Navigator.BaseUri));
        Item data = new Item();
        Metadata metadata = new Metadata();
        metadata.Type = Config.MainListType;
        data.Metadata = metadata;
        data.OfficeId = office.GetItemId();
        data.MeterViolationTypeId = form1Vald.MeterViolationType;
        data.ViolationDate = form1Vald.ViolationDate;
        data.Region = form1Vald.Region;
        data.City = form1Vald.City;
        data.Colony = form1Vald.Colony;
        data.Street = form1Vald.Street;
        data.House = form1Vald.House;
        data.AccountNumber = form1Vald.AccountNumber;
        data.ViolationDetails = form1Vald.ViolationDetails;
        data.DamageDetails = form1Vald.DamageDetails;
        data.DiscovererNameId = peoplePicker.GetValue();
        data.ViolatorName = form1Vald.ViolatorName;
        data.ViolatorType = form1Vald.ViolatorType;
        data.ViolatorNationalID = form1Vald.ViolatorNationalID;
        data.ViolatorNationalIDType = form1Vald.ViolatorNationalIDType;
        data.ViolatorMobile = form1Vald.ViolatorMobile;
        data.ViolatorStatement = form1Vald.ViolatorStatement;
        data.Stage = 0;
        var myContent = JsonConvert.SerializeObject(data);
        var buffer = System.Text.Encoding.UTF8.GetBytes(myContent);
        var byteContent = new ByteArrayContent(buffer);
        var mediaType = new MediaTypeWithQualityHeaderValue("application/json");
        MediaTypeWithQualityHeaderValue.TryParse("application/json;odata=verbose", out mediaType);
        byteContent.Headers.ContentType = mediaType;
        var response = await Http.PostAsync(Navigator.BaseUri+Config.BaseURL + "_api/web/lists(guid'" + Config.MainListGuid + "')/items", byteContent);
        if (response.StatusCode == HttpStatusCode.Created)
        {
            root = JsonConvert.DeserializeObject<Root>(await response.Content.ReadAsStringAsync());
            await SetViolationIdAsync(root.Id);
        }
    }

    private async Task SetViolationIdAsync(int id)
    {
        string vid = VCSTools.GetVid(id);
        HttpClient Http = new HttpClient();
        Http.DefaultRequestHeaders.Add("Accept", "application/json");
        Http.DefaultRequestHeaders.Add("X-RequestDigest", await VCSTools.GetDigestAsync(Navigator.BaseUri));
        Http.DefaultRequestHeaders.Add("IF-MATCH", "*");
        Http.DefaultRequestHeaders.Add("X-HTTP-Method", "MERGE");
        Item data = new Item();
        Metadata metadata = new Metadata();
        metadata.Type = Config.MainListType;
        data.Metadata = metadata;
        data.Title = vid;
        var myContent = JsonConvert.SerializeObject(data);
        var buffer = System.Text.Encoding.UTF8.GetBytes(myContent);
        var byteContent = new ByteArrayContent(buffer);
        var mediaType = new MediaTypeWithQualityHeaderValue("application/json");
        MediaTypeWithQualityHeaderValue.TryParse("application/json;odata=verbose", out mediaType);
        byteContent.Headers.ContentType = mediaType;
        var response = await Http.PostAsync(Navigator.BaseUri+Config.BaseURL + "_api/web/lists(guid'" + Config.MainListGuid + "')/items('" + id + "')", byteContent);
        if (response.StatusCode == HttpStatusCode.NoContent)
        {
            result = "سجل بنجاح باستخدام رقم التعريف: #" + vid;
            bool x = await jsRun.InvokeAsync<bool>("alertx");
            Navigator.NavigateTo("default.aspx/forms/workflow/"+id);
        }
        else
        {
            result = "فشل السجل في الحفظ";
            Console.WriteLine(result+" : "+JsonConvert.SerializeObject(data));
        }
    }


#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRun { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager Navigator { get; set; }
    }
}
#pragma warning restore 1591
